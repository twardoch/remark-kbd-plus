name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run full test suite
      run: npm run test:full
    
    - name: Update version based on tag
      run: npm run version
    
    - name: Build distribution
      run: npm run prepare
    
    - name: Create package
      run: npm pack
    
    - name: Get package info
      id: package
      run: |
        echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ steps.package.outputs.version }} of ${{ steps.package.outputs.name }}
          
          ## Installation
          
          ```bash
          npm install ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }}
          ```
          
          ## Changes
          
          See the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref }}/CHANGELOG.md) for details.
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.tgz
        asset_name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.tgz
        asset_content_type: application/gzip
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create multi-platform binaries info
      run: |
        echo "Package published successfully!" > release-info.txt
        echo "Platform: Any (Node.js package)" >> release-info.txt
        echo "Node.js versions supported: 18.x, 20.x, 22.x" >> release-info.txt
        echo "Installation: npm install ${{ steps.package.outputs.name }}" >> release-info.txt
    
    - name: Upload additional release info
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-info.txt
        asset_name: release-info.txt
        asset_content_type: text/plain